{"version":3,"file":"static/js/433.309e9628.chunk.js","mappings":"+OAEaA,E,OAAmBC,GAAAA,IAAH,sS,SC4C7B,EAxCoB,WAClB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GACJV,EAAUU,GACLA,EAAKC,QACRT,GAAS,EAEZ,IACAU,MAAMV,GACNW,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,CAACC,KAGF,UAACT,EAAD,WACGG,IACC,wBACGA,EAAOe,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EAKZ,MAGJd,IAAS,sEACTE,IAAa,SAACe,EAAA,EAAD,MAGnB,C","sources":["pages/ReviewsPage/ReviewPage.styled.js","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px 30px 30px;\n  padding: 30px;\n  background-color: #3f51b542;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../servises/moviesApi';\nimport { ReviewsContainer } from './ReviewPage.styled';\n\nconst ReviewsPage = () => {\n  const [review, setReview] = useState(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieReviews(movieId)\n      .then(data => {\n        setReview(data);\n        if (!data.length) {\n          setError(true);\n        }\n      })\n      .catch(setError)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {review && (\n        <ul>\n          {review.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {error && <p>We don't have any reviews for this movie. </p>}\n      {isLoading && <Loader />}\n    </ReviewsContainer>\n  );\n};\nexport default ReviewsPage;\n"],"names":["ReviewsContainer","styled","useState","review","setReview","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieReviews","then","data","length","catch","finally","map","id","author","content","Loader"],"sourceRoot":""}